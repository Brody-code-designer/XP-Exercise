/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useRef, useState} from 'react'
import {useGLTF} from '@react-three/drei'
import christmasPresent from "./christmas-present.glb"
import {useSpring, animated} from "@react-spring/three";
import {useFrame} from "@react-three/fiber";

export default function ChristmasPresent({...props}) {
    const group = useRef()
    const {nodes, materials} = useGLTF(christmasPresent)

    const [active, setActive] = useState(true)

    //changes size of present onCLick
    const {changeScale} = useSpring({
        changeScale: active ? 1 : 1.5,
        // to: {changeScale: 10},
        // from: {changeScale: 0,}
    })

    const present =useRef()

    useFrame(({clock}) => {
        present.current.rotation.y = Math.sin(clock.getElapsedTime())
    })

    return (
        <group ref={group} {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0.1, 0]}>
                <group rotation={[Math.PI / 2, 0, 0]}>
                    <group position={[0, 4.09, 0]} scale={20}>
                        <animated.mesh ref={present} geometry={nodes.christmas_present_Present_0.geometry}
                                       material={materials.Present} scale={changeScale} onClick={() => setActive(!active)}/>
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/christmas-present.glb')
